diff --git a/node_modules/react-native-country-picker-modal/lib/CloseButton.js b/node_modules/react-native-country-picker-modal/lib/CloseButton.js
index 4fb16f6..a50093f 100644
--- a/node_modules/react-native-country-picker-modal/lib/CloseButton.js
+++ b/node_modules/react-native-country-picker-modal/lib/CloseButton.js
@@ -10,8 +10,8 @@ const styles = StyleSheet.create({
         justifyContent: 'center'
     },
     imageStyle: {
-        height: 25,
-        width: 25,
+        height: 30,
+        width: 30,
         resizeMode: 'contain'
     }
 });
diff --git a/node_modules/react-native-country-picker-modal/lib/CountryFilter.js b/node_modules/react-native-country-picker-modal/lib/CountryFilter.js
index 28b0dc4..401476f 100644
--- a/node_modules/react-native-country-picker-modal/lib/CountryFilter.js
+++ b/node_modules/react-native-country-picker-modal/lib/CountryFilter.js
@@ -4,7 +4,15 @@ import { useTheme } from './CountryTheme';
 const styles = StyleSheet.create({
     input: {
         height: 48,
-        width: '70%',
+        width: "80%",
+        borderWidth: 1,
+        borderColor: '#EDF0F4',
+        borderRadius: 8,
+        paddingHorizontal: 16,
+        height: 50,
+        backgroundColor: "#F8FAFC",
+        fontSize: 14,
+        fontFamily: "HelveticaNeueMedium",
         ...Platform.select({
             web: {
                 outlineWidth: 0,
@@ -18,11 +26,11 @@ export const CountryFilter = (props) => {
     const { filterPlaceholderTextColor, fontFamily, fontSize, onBackgroundTextColor } = useTheme();
     return (React.createElement(TextInput, Object.assign({ testID: "text-input-country-filter", autoCorrect: false, placeholderTextColor: filterPlaceholderTextColor, style: [
             styles.input,
-            { fontFamily, fontSize, color: onBackgroundTextColor }
+            {  color: onBackgroundTextColor }
         ] }, props)));
 };
 CountryFilter.defaultProps = {
     autoFocus: false,
-    placeholder: 'Enter country name'
+    placeholder: 'Search by country name'
 };
 //# sourceMappingURL=CountryFilter.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-country-picker-modal/lib/CountryList.js b/node_modules/react-native-country-picker-modal/lib/CountryList.js
index 8816018..91b6196 100644
--- a/node_modules/react-native-country-picker-modal/lib/CountryList.js
+++ b/node_modules/react-native-country-picker-modal/lib/CountryList.js
@@ -10,6 +10,7 @@ const styles = StyleSheet.create({
         flex: 1,
         flexDirection: 'row',
         justifyContent: 'space-between',
+        paddingHorizontal: 16,
     },
     letters: {
         marginRight: 10,
@@ -111,7 +112,7 @@ export const CountryList = (props) => {
     }, [filterFocus]);
     const initialNumToRender = Math.round(height / (itemHeight || 1));
     return (React.createElement(View, { style: [styles.container, { backgroundColor }] },
-        React.createElement(FlatList, Object.assign({ onScrollToIndexFailed: true, ref: flatListRef, testID: 'list-countries', keyboardShouldPersistTaps: 'handled', automaticallyAdjustContentInsets: false, scrollEventThrottle: 1, getItemLayout: (_data, index) => ({
+        React.createElement(FlatList, Object.assign({ onScrollToIndexFailed: true, ref: flatListRef, testID: 'list-countries', keyboardShouldPersistTaps: 'handled', automaticallyAdjustContentInsets: false, scrollEventThrottle: 1, showsVerticalScrollIndicator: false, getItemLayout: (_data, index) => ({
                 length: itemHeight + borderBottomWidth,
                 offset: (itemHeight + borderBottomWidth) * index,
                 index,
diff --git a/node_modules/react-native-country-picker-modal/lib/CountryPicker.js b/node_modules/react-native-country-picker-modal/lib/CountryPicker.js
index c4ba18e..0ca305f 100644
--- a/node_modules/react-native-country-picker-modal/lib/CountryPicker.js
+++ b/node_modules/react-native-country-picker-modal/lib/CountryPicker.js
@@ -63,7 +63,7 @@ export const CountryPicker = (props) => {
     return (React.createElement(React.Fragment, null,
         withModal && renderFlagButton(flagProp),
         React.createElement(CountryModal, Object.assign({}, { visible, withModal, disableNativeModal, ...modalProps }, { onRequestClose: onClose, onDismiss: onClose }),
-            React.createElement(HeaderModal, Object.assign({}, {
+            React.createElement(HeaderModal, Object.assign({marginBottom: 10}, {
                 withFilter,
                 onClose,
                 closeButtonImage,
